<?php


namespace app\DefaultApp\Models;


use systeme\Model\Model;

class NumeroControler extends Model
{

    protected $table="numero_controler";
    public $id,$branche,$limite,$limite_vente;

    private function supprimer($branche){
        $con=self::connection();
        $req="delete from numero_controler where branche=:branche";
        $stmt=$con->prepare($req);
        if($stmt->execute(array(
            ":branche"=>$branche
        ))){
            return true;
        }
        return false;
    }

    public function add()
    {
        $this->supprimer($this->branche);
        return parent::add(); // TODO: Change the autogenerated stub
    }

    public function lister($branche){
        $con=self::connection();
        $req="select *from numero_controler where branche=:branche";
        $stmt=$con->prepare($req);
        $stmt->execute(array(
            ":branche"=>$branche
        ));
        $data=$stmt->fetchAll(\PDO::FETCH_CLASS,__CLASS__);
        if(count($data)>0){
            return $data[0];
        }
        return null;
    }

    public function existe($boule,$branche)
    {
        $con=self::connection();
        $req="select *from numero_controler where branche=:branche";
        $stmt=$con->prepare($req);
        $stmt->execute(array(":branche"=>$branche));
        $data=$stmt->fetchAll();
        $mpbloquer="";
        if(count($data)>0){
           $lbcontrole=json_decode($data[0]['limite']);
            foreach ($lbcontrole as $pa){
                if($pa->numero==$boule && $pa->bloquer==true){
                    $mpbloquer.=$pa->numero." , ";
                }
            }
        }
        if($mpbloquer!=""){
          return true;
        }else{
            return false;
        }
    }

    public function limite($branche,$paris)
    {
        $con=self::connection();
        $req="select *from numero_controler where branche=:branche";
        $stmt=$con->prepare($req);
        $stmt->execute(array(":branche"=>$branche));
        $data=$stmt->fetchAll();
        $mpbloquer="";
        if(count($data)>0){
            $lbcontrole=json_decode($data[0]['limite']);
            foreach ($paris as $p) {
                foreach ($lbcontrole as $pa) {
                    if ($pa->numero == $p->pari && $pa->limite < $p->mise) {
                        $mpbloquer.=$pa->numero." est limite a ".$pa->limite."<br>";
                    }
                }
            }
        }
        return $mpbloquer;
    }

}
