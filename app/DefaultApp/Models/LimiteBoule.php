<?php

namespace app\DefaultApp\Models;

use systeme\Model\Model;

class LimiteBoule extends Model
{
    protected $table = "limite_boule";
    public $id, $boule, $limite, $tirage;

    public function existe($boule, $tirage)
    {
        $con = self::connection();
        $req = "select *from limite_boule where boule='{$boule}' and tirage='{$tirage}'";
        $stmt = $con->prepare($req);
        $stmt->execute();
        $data = $stmt->fetchAll();
        if (count($data) > 0) {
            return true;
        }

        return false;
    }

    public function deleteParBoule($boule, $tirage)
    {
        $con = self::connection();
        $req = "delete from limite_boule where boule='{$boule}' and tirage='{$tirage}'";
        $stmt = $con->prepare($req);
        $stmt->execute();
    }

    public function add()
    {
        if ($this->existe($this->boule, $this->tirage)) {
            $this->deleteParBoule($this->boule, $this->tirage);
        }
        return parent::add(); // TODO: Change the autogenerated stub
    }

    public static function getLimiteTout($boule,$tirage)
    {
        $con = self::connection();
        $req = "select *from limite_boule where boule='{$boule}'";
        $stmt = $con->prepare($req);
        $stmt->execute();
        $data = $stmt->fetchAll(\PDO::FETCH_OBJ);
        if (count($data) > 0) {
            if($data[0]->tirage=="tout" || $data[0]->tirage=="n/a"){
                return intval($data[0]->limite);
            }else {
                if ($data[0]->tirage == $tirage) {
                    return intval($data[0]->limite);
                } else {
                    return null;
                }
            }
        }
        return null;
    }

    public static function getLimite($boule, $tirage)
    {
        $con = self::connection();
        $req = "select *from limite_boule where boule='{$boule}' and tirage='{$tirage}'";
        $stmt = $con->prepare($req);
        $stmt->execute();
        $data = $stmt->fetchAll(\PDO::FETCH_OBJ);
        if (count($data) > 0) {
            return intval($data[0]->limite);
        }
        return null;
    }

    public function lister($id_entreprise)
    {
        $con=self::connection();
        $req="select *from limite_boule order by id asc";
        $stmt=$con->prepare($req);
        $stmt->execute();
        return $stmt->fetchAll(\PDO::FETCH_CLASS,__CLASS__);
    }

}
